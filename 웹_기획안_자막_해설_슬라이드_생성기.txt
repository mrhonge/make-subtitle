자막 해설 슬라이드 생성기 - 웹 기획안

1. 프로젝트 개요

1.1 프로젝트명
자막 해설 슬라이드 생성기 (Subtitle Commentary Slide Generator)

1.2 핵심 컨셉
연극/공연 대본(.txt) 파일을 업로드하면 자막 슬라이드를 자동으로 생성하고, 웹 기반 인터페이스에서 편집할 수 있는 도구

1.3 개발 목적
- 공연예술계의 자막 제작 비용 및 시간 절약
- 접근성 향상을 위한 자막 제작 장벽 완화
- 직관적이고 사용하기 쉬운 웹 기반 자막 편집 도구 제공

1.4 타겟 사용자
- 연극계 종사자 (연출가, 배우, 스태프)
- 접근성 조성에 관심이 있으나 예산이 부족한 프로듀서
- 자막 제작 경험이 없는 초보자

2. 기술 스택 및 아키텍처

2.1 프론트엔드
- Framework: Next.js (Pages Router)
- Language: JavaScript
- Package Manager: Yarn
- Styling: CSS Modules + 인라인 스타일
- State Management: React useState

2.2 주요 라이브러리
- React Hooks (useState)
- FileReader API (파일 업로드)
- LocalStorage API (데이터 저장)
- Blob API (파일 다운로드)

2.3 프로젝트 구조
caption-making/
├── components/
│   ├── atoms/          # 기본 UI 컴포넌트
│   ├── molecules/      # 복합 UI 컴포넌트
│   ├── organisms/      # 큰 단위 UI 컴포넌트
│   └── modals/         # 모달 컴포넌트
├── pages/              # Next.js 페이지
├── public/             # 정적 파일
└── styles/             # 전역 스타일

3. 주요 기능 명세

3.1 핵심 기능 (★★★★★)

3.1.1 대본 파일 업로드 및 파싱
- 입력 형식: .txt 파일만 지원
- 파싱 로직: --- 구분자를 기준으로 슬라이드 분할
- 파일 처리: FileReader API를 통한 UTF-8 텍스트 읽기
- 에러 처리: 파일 형식 검증 및 읽기 실패 시 사용자 알림

3.1.2 슬라이드 자동 생성
- 분할 기준: --- 구분자로 슬라이드 구분
- 기본 템플릿: 검정 배경, 흰색 텍스트, 16:9 비율 고려
- 빈 슬라이드 필터링: 내용이 없는 슬라이드는 제외

3.1.3 실시간 슬라이드 편집
- 편집 모드: 클릭 시 편집 모드 전환
- 텍스트 편집: textarea를 통한 실시간 편집
- 키보드 단축키:
  - Shift + Enter: 줄바꿈 및 불릿 포인트 추가 (·)
  - Ctrl/Cmd + Enter: 편집 모드 종료
- 자동 저장: 편집 시마다 히스토리에 자동 저장

3.2 편의 기능 (★★★★☆)

3.2.1 슬라이드 관리
- 새 슬라이드 추가: 현재 슬라이드 다음에 빈 슬라이드 삽입
- 슬라이드 삭제: 확인 대화상자와 함께 안전한 삭제
- 슬라이드 복제: 현재 슬라이드를 다음 위치에 복제
- 슬라이드 번호: 자동 번호 매기기

3.2.2 작업 히스토리 관리
- Undo/Redo: 편집 히스토리 기반 실행 취소/다시 실행
- 히스토리 저장: 각 편집 단계별 상태 저장
- 상태 복원: 이전 상태로 완전 복원 가능

3.2.3 파일 관리
- 로컬 저장: LocalStorage를 통한 브라우저 저장
- 작업 불러오기: 저장된 슬라이드 프로젝트 복원
- 대본 다운로드: 편집된 슬라이드를 .txt 형식으로 다운로드

3.3 프레젠테이션 기능 (★★★☆☆)

3.3.1 프레젠테이션 모드
- 전체화면 모드: 슬라이드 전체화면 표시
- 슬라이드 전환: 키보드/마우스로 슬라이드 이동
- 실시간 미리보기: 편집 내용이 즉시 반영

4. 사용자 인터페이스 (UI/UX)

4.1 전체 레이아웃
- 반응형 디자인: 최대 너비 900px, 중앙 정렬
- 헤더 섹션: 제목, 설명, 도움말 버튼들
- 컨트롤 섹션: 파일 업로드, 저장/불러오기, 다운로드 버튼
- 메인 섹션: 슬라이드 미리보기 및 편집 영역

4.2 색상 팔레트
- 주조색: #1976d2 (파란색)
- 보조색: #43a047 (초록색), #ffb300 (주황색), #9c27b0 (보라색)
- 배경색: #ffffff (흰색)
- 텍스트: #333333 (진한 회색)
- 슬라이드 배경: #111111 (검정색)
- 슬라이드 텍스트: #ffffff (흰색)

4.3 버튼 디자인
- 기본 스타일: 둥근 모서리(6-8px), 패딩 8-20px
- 호버 효과: 색상 변화, 약간의 위로 이동
- 그림자: 부드러운 그림자로 입체감 표현
- 아이콘: 이모지와 텍스트 조합

4.4 슬라이드 편집 인터페이스
- 편집 모드: 파란색 테두리로 강조
- 텍스트 영역: 검정 배경, 흰색 텍스트, 최소 높이 200px
- 도구 버튼: 새 슬라이드(초록), 삭제(빨강), 복제(보라)
- 단축키 안내: 우하단에 키보드 단축키 표시

5. 모달 시스템

5.1 도움말 모달
- 사용법 보기: 웹사이트 사용법 튜토리얼
- 대본 작성 가이드: .txt 파일 작성 방법 안내
- 자막 제작 Tip: 효과적인 자막 제작 팁

5.2 모달 디자인
- 배경: 반투명 오버레이
- 내용: 흰색 배경, 둥근 모서리, 그림자
- 닫기: X 버튼 또는 배경 클릭

6. 반응형 디자인

6.1 브레이크포인트
- 데스크톱: 900px 이상
- 태블릿: 768px - 899px
- 모바일: 767px 이하

6.2 적응 요소
- 버튼 크기: 모바일에서 터치하기 쉽게 확대
- 텍스트 크기: 화면 크기에 따라 조정
- 레이아웃: 모바일에서는 세로 배치

7. 성능 최적화

7.1 메모리 관리
- 히스토리 제한: 과도한 히스토리 저장 방지
- 이벤트 리스너: 적절한 이벤트 정리
- DOM 조작: 효율적인 DOM 업데이트

7.2 사용자 경험
- 로딩 상태: 파일 업로드 시 피드백
- 에러 처리: 명확한 에러 메시지
- 자동 저장: 편집 내용 자동 저장

8. 향후 개발 계획

8.1 단기 목표
- PPT/PDF 다운로드: 슬라이드를 프레젠테이션 형식으로 내보내기
- 템플릿 시스템: 다양한 슬라이드 템플릿 제공
- 일괄 편집: 여러 슬라이드 동시 편집 기능

8.2 중기 목표
- 실시간 송출: 관객 화면으로 실시간 자막 전송
- 협업 기능: 여러 사용자 동시 편집
- 클라우드 저장: 서버 기반 프로젝트 저장

8.3 장기 목표
- AI 자동 분할: 더 정교한 슬라이드 자동 분할
- 음성 인식: 음성 파일에서 자막 자동 생성
- 다국어 지원: 다양한 언어 자막 지원

9. 기술적 고려사항

9.1 브라우저 호환성
- 지원 브라우저: Chrome, Firefox, Safari, Edge 최신 버전
- 폴리필: 필요한 경우 ES6+ 기능 폴리필

9.2 접근성
- 키보드 네비게이션: 모든 기능 키보드로 접근 가능
- 스크린 리더: 적절한 ARIA 라벨 및 역할
- 색상 대비: WCAG 가이드라인 준수

9.3 보안
- 파일 업로드: 클라이언트 사이드에서만 처리
- 데이터 저장: 로컬 스토리지 사용으로 서버 보안 위험 없음
- XSS 방지: 사용자 입력 적절한 이스케이프

이 기획안은 현재 구현된 웹페이지의 모든 기능과 디자인을 포괄적으로 정리한 것으로, 향후 개발 및 개선 작업 시 참고 자료로 활용할 수 있습니다. 